services:
  - docker

script:
- docker build --target test --tag my-test-image .
- docker run my-test-image todo_app/items_test.py    
- docker run -e TOKEN -e KEY -e CLIENT -e GITHUBID -e WEBAPPLICATIONCLIENT -e CLIENTSECRET -e TODOBOARD -e DOINGBOARD -e DONEBOARD -e CONNECTIONSTRING my-test-image  todo_app/e2e_test.py 
- docker build --target production --tag my-production-image .

install:
- wget https://releases.hashicorp.com/terraform/"$TF_VERSION"/terraform_"$TF_VERSION"_linux_amd64.zip
- unzip terraform_"$TF_VERSION"_linux_amd64.zip
- sudo mv terraform /usr/local/bin/
- rm terraform_"$TF_VERSION"_linux_amd64.zip
- terraform init


before_deploy:
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
- docker build --target production --tag $DOCKER_USERNAME/my-production-image:latest .
- docker push $DOCKER_USERNAME/my-production-image:latest
- docker login --username="$DOCKER_USERNAME" --password=$(heroku auth:token) registry.heroku.com
- docker pull $DOCKER_USERNAME/my-production-image:latest
- docker tag  $DOCKER_USERNAME/my-production-image:latest registry.heroku.com/trello-to-do/web
# - docker push registry.heroku.com/trello-to-do/web
- terraform apply -var="TODOBOARD=$TODOBOARD" -var="DOINGBOARD=$DOINGBOARD" -var="DONEBOARD=$DONEBOARD" -var="ARM_CLIENT_ID=$ARM_CLIENT_ID" -var="ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID" -var="ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET" -auto-approve

deploy:
  provider: script
  script: 
  - bash webhook.sh
  on:
    branch: module12

